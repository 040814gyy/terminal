// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import "ICoreState.idl";
import "IControlSettings.idl";
import "EventArgs.idl";

namespace Microsoft.Terminal.Control
{

    // This is a mirror of
    // ::Microsoft::Console::VirtualTerminal::TerminalInput::MouseButtonState,
    // but projectable.
    struct MouseButtonState
    {
        Boolean IsLeftButtonDown;
        Boolean IsMiddleButtonDown;
        Boolean IsRightButtonDown;
    };

    [default_interface] runtimeclass ControlCore : ICoreState
    {
        ControlCore(IControlSettings settings,
                    Microsoft.Terminal.TerminalConnection.ITerminalConnection connection);

        // void AttachUiaEngine(::Microsoft::Console::Render::IRenderEngine* const pEngine);
        // ::Microsoft::Console::Types::IUiaData* GetUiaData() const;

        Windows.Foundation.Size FontSize { get; };
        String FontFaceName { get; };
        UInt16 FontWeight { get; };

        UInt64 GetSwapChainHandle();
        // std::vector<std::wstring> SelectedText(bool trimTrailingWhitespace) const;
        IVector<String> SelectedText(Boolean trimTrailingWhitespace);
        void UpdateHoveredCell(Windows.Foundation.IReference<Microsoft.Terminal.Core.Point> terminalPosition);
        Windows.Foundation.IReference<Microsoft.Terminal.Core.Point> GetHoveredCell();

        Boolean TrySendKeyEvent(Int16 vkey,
                             Int16 scanCode,
                             Microsoft.Terminal.Core.ControlKeyStates modifiers,
                             Boolean keyDown);
        Boolean SendCharEvent(Char ch,
                           Int16 scanCode,
                           Microsoft.Terminal.Core.ControlKeyStates modifiers);

        Microsoft.Terminal.Core.Point CursorPosition();
        void ResumeRendering();
        void ToggleReadOnlyMode();
        void BlinkAttributeTick();
        String GetHoveredUriText();
        void SendInput(String text);
        void PasteText(String text);
        void UpdatePatternLocations();
        Boolean HasSelection();
        void Search(String text, Boolean goForward, Boolean caseSensitive);
        void UpdateSettings(IControlSettings settings);
        void UpdateAppearance(IControlAppearance appearance);
        void ToggleShaderEffects();
        void SetBackgroundOpacity(Double opacity);
        Microsoft.Terminal.Core.Color BackgroundColor();
        Boolean Initialize(Double actualWidth,
                           Double actualHeight,
                           Double compositionScale);
        void Close();
        void BlinkCursor();
        void ResetFontSize();
        void AdjustFontSize(Int32 fontSize);
        void SizeChanged(Double width, Double height);
        void ScaleChanged(Double scale);
        Boolean IsInReadOnlyMode();
        Boolean CursorOn;
        void EnablePainting();


        event FontSizeChangedEventArgs FontSizeChanged;

        event Windows.Foundation.TypedEventHandler<Object, CopyToClipboardEventArgs> CopyToClipboard;
        event Windows.Foundation.TypedEventHandler<Object, TitleChangedEventArgs> TitleChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> WarningBell;
        event Windows.Foundation.TypedEventHandler<Object, Object> TabColorChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> BackgroundColorChanged;
        event Windows.Foundation.TypedEventHandler<Object, ScrollPositionChangedArgs> ScrollPositionChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> CursorPositionChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> TaskbarProgressChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> ConnectionStateChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> HoveredHyperlinkChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> RendererEnteredErrorState;
        event Windows.Foundation.TypedEventHandler<Object, Object> SwapChainChanged;
        event Windows.Foundation.TypedEventHandler<Object, RendererWarningArgs> RendererWarning;
        event Windows.Foundation.TypedEventHandler<Object, NoticeEventArgs> RaiseNotice;
        event Windows.Foundation.TypedEventHandler<Object, TransparencyChangedEventArgs> TransparencyChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> ReceivedOutput;

    };
}
