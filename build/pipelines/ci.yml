trigger:
  batch: true
  branches:
    include:
      - main
      - feature/*
      - gh-readonly-queue/*
  paths:
    exclude:
      - doc/*
      - samples/*
      - tools/*

pr:
  branches:
    include:
      - main
      - feature/*
  paths:
    exclude:
      - doc/*
      - samples/*
      - tools/*

variables:
  - name: runCodesignValidationInjectionBG
    value: false

#     0.0.yyMM.dd##
#     0.0.1904.0900
name: 0.0.$(Date:yyMM).$(Date:dd)$(Rev:rr)

parameters:
  - name: auditMode
    displayName: "Build in Audit Mode (x64)"
    type: boolean
    default: true
  - name: runTests
    displayName: "Run Tests"
    type: boolean
    default: true
  - name: buildPlatforms
    type: object
    default:
      - x64
      - x86
      - arm64

stages:
  - ${{ each platform in parameters.buildPlatforms }}:
    - stage: Build_${{ platform }}
      displayName: Build ${{ platform }}
      dependsOn: []
      jobs:
        - job: Build
          pool:
            name: SHINE-OSS-L
          strategy:
            matrix:
              Release_Any CPU:
                FooBar: z
              Debug_x86:
                FooBar: y
              Release_x64:
                FooBar: x
          variables:
            JobOutputArtifactName: foo-1
          steps:
            - template: ./templates-v2/steps-set-artifact-name.yml

    - ${{ if eq(parameters.runTests, true) }}:
      - stage: Test_${{ platform }}
        displayName: Test ${{ platform }}
        dependsOn:
          - Build_${{ platform }}
        condition: succeeded()
        jobs:
          - job: Foo
            pool:
              name: SHINE-OSS-L
            variables:
              deps: $[convertToJson(stageDependencies)]
            steps:
              - pwsh: |-
                  Write-Host "$(deps)"
